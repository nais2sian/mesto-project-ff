{"version":3,"file":"main.js","mappings":"mBAAA,IAAMA,EAAS,CACbC,QAAQ,4CACRC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBCFpB,SAASC,EAAWC,EAAcC,EAAYC,EAASC,GACrD,IACMC,EADWC,SAASC,cAAc,kBAAkBC,QACpCD,cAAc,sBAAsBE,WAAU,GAC9DC,EAASL,EAAKE,cAAc,wBAC5BI,EAAgBN,EAAKE,cAAc,sBACnCK,EAAWD,EAAcJ,cAAc,gBACvCM,EAAaF,EAAcJ,cAAc,sBACzCO,EAAYT,EAAKE,cAAc,gBAC/BQ,EAAkBV,EAAKE,cAAc,gBAC3CO,EAAUE,IAAMf,EAAagB,KAC7BH,EAAUI,IAAM,eAAiBjB,EAAakB,KAC9CJ,EAAgBK,YAAcnB,EAAakB,KAC3CL,EAAUK,KAAOlB,EAAakB,KAE1Bf,IAAWH,EAAaoB,MAAMC,IAChCZ,EAAOa,iBAAiB,SAAS,WAC/BrB,EAAWG,EAAMJ,EAAaqB,IAChC,IAEAZ,EAAOc,MAAMC,QAAU,OAGzBZ,EAAWU,iBAAiB,SAAS,WD0EvC,IAAoBG,ECzEZb,EAAWc,UAAUC,SAAS,gCDyElBF,ECxEHzB,EAAaqB,IDyErBO,MAAM,GAADC,OAAIlC,EAAOC,QAAO,iBAAAiC,OAAgBJ,GAAM,CAClD5B,QAASF,EAAOE,QAChBiC,OAAQ,WACPC,MAAK,SAACC,GACP,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,WAADP,OAAYQ,IAAIC,QACvC,KChFOP,MAAK,SAACQ,GACL5B,EAASQ,YAAcoB,EAAKC,MAAMC,OAClC7B,EAAWc,UAAUgB,OAAO,8BAC9B,IACCC,OAAM,SAACC,GACNC,QAAQD,MAAM,4BAA6BA,EAC7C,IDgDR,SAAiBnB,GACf,OAAOG,MAAM,GAADC,OAAIlC,EAAOC,QAAO,iBAAAiC,OAAgBJ,GAAM,CAClD5B,QAASF,EAAOE,QAChBiC,OAAQ,QAEPC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIa,MAAM,gCAElB,OAAOd,EAASE,MAClB,IACCH,MAAK,SAACQ,GACL,OAAOA,CACT,GACJ,CC5DMQ,CAAQ/C,EAAaqB,KAClBU,MAAK,WACJnB,EAAWc,UAAUsB,IAAI,+BACzBrC,EAASQ,YAAc8B,SAAStC,EAASQ,aAAe,CAC1D,IACCwB,OAAM,SAACC,GACNC,QAAQD,MAAM,yBAA0BA,EAC1C,GAEN,IAaF,SAAmBxC,EAAMD,EAAQ+C,GACb9C,EAAKoC,MACbW,SAAQ,SAAUC,GACtBA,EAAK/B,MAAQlB,GACf+C,EAAIxB,UAAUsB,IAAI,8BAEtB,GACF,CAjBEK,CAAUrD,EAAcG,EAAQS,GAChC,IAAM0C,EAAatD,EAAawC,MAAMC,OAMtC,OALA9B,EAASQ,YAAcmC,EAEvBzC,EAAUS,iBAAiB,SAAS,WAClCpB,EAAQW,EACV,IACOT,CACT,CCtDA,SAASmD,EAAUC,GACjBA,EAAM9B,UAAUsB,IAAI,mBACpB3C,SAASiB,iBAAiB,UAAWmC,EACvC,CAEA,SAASC,EAAWF,GAClBA,EAAM9B,UAAUgB,OAAO,mBACvBrC,SAASsD,oBAAoB,UAAWF,EAC1C,CAEA,SAASA,EAAeG,GACtB,GAAkB,WAAdA,EAAMC,KAAkC,KAAdD,EAAMC,IAAY,CAC9C,IAAMN,EAAYlD,SAASC,cAAc,oBACrCiD,GACFG,EAAWH,EAEf,CACF,CCNA,SAASO,EAAgBC,EAAapE,GACdoE,EAAYC,iBAAiBrE,EAAOsE,eAC5Cd,SAAQ,SAACe,GACrBA,EAAQxC,UAAUgB,OAAO/C,EAAOwE,iBAChCD,EAAQE,kBAAkB,IAC1B,IAAMC,EAAeH,EAAQI,mBAC7BD,EAAa3C,UAAUgB,OAAO,wBAC9B2B,EAAalD,YAAc,EAC7B,GACF,C,0GCFA,IAAMoD,EAAc,CAClBC,aAAc,eACdP,cAAe,gBACfQ,qBAAsB,iBACtBC,oBAAqB,yBACrBP,gBAAiB,0BACjBQ,WAAY,wBAGRpE,EAAUF,SAASC,cAAc,YACjCsE,EAASvE,SAAS2D,iBAAiB,UAEnCa,EADctE,EAAQD,cAAc,yBACXA,cAAc,iBACvCwE,EAAUvE,EAAQD,cAAc,0BAChCyE,EAAcD,EAAQxE,cAAc,kBACpC0E,EAAYF,EAAQxE,cAAc,mBAClC2E,EAAcF,EAAYzE,cAAc,mBACxC4E,EAAaH,EAAYzE,cAAc,yBACvC6E,EAAiBJ,EAAYzE,cAAc,yBAC3C8E,EAAgBN,EAAQxE,cAAc,wBAEtC+E,EAAehF,SAASC,cAAc,2BACtCgF,EAAeD,EAAa/E,cAChC,gDAEIiF,EAAWD,EAAahF,cAAc,iBACtCkF,EAAkBF,EAAahF,cAAc,mBAE7CmF,EAAepF,SAASC,cAAc,0BAEtCyD,EADc0B,EAAanF,cAAc,mBACfA,cAAc,gBACxCoF,EAAY3B,EAAYzD,cAC5B,wCAEIqF,EAAW5B,EAAYzD,cAC3B,+CAEIsF,EAAa7B,EAAYzD,cAAc,yBAEvCuF,EAAcxF,SAASC,cAAc,gCAErCwF,EADaD,EAAYvF,cAAc,mBACfA,cAAc,gBACtCyF,EAAcD,EAAWxF,cAC7B,uCAEI0F,EAAeF,EAAWxF,cAAc,yBAExC2F,EAAe5F,SAASC,cAAc,8BAEtC4F,EADcD,EAAa3F,cAAc,mBACfA,cAAc,gBACxC6F,EAAcD,EAAY5F,cAAc,yBACxC8F,EAAaF,EAAY5F,cAC7B,6CAEI+F,EAAYH,EAAY5F,cAC5B,uCAwDF,SAASgG,EAAcC,GACrBhD,EAAU8B,GACVE,EAASxE,IAAMwF,EAAMxF,IACrBwE,EAAStE,IAAMsF,EAAMtF,IACrBuE,EAAgBrE,YAAcoF,EAAMrF,IACtC,CAsFA,SAASsF,EAAWD,EAAOE,GJ1J3B,IAA0BhF,KI2JPgF,EJ1JV7E,MAAM,GAADC,OAAIlC,EAAOC,QAAO,WAAAiC,OAAUJ,GAAM,CAC5CK,OAAQ,SACRjC,QAASF,EAAOE,UAEfkC,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,WAADP,OAAYQ,IAAIC,QACvC,KIkJCP,MAAK,WACJwE,EAAM7D,QACR,IACCC,OAAM,SAACC,GACNC,QAAQD,MAAM,yBAA0BA,EAC1C,GACJ,CAvJET,QAAQuE,IAAI,CJrEL9E,MAAM,GAADC,OAAIlC,EAAOC,QAAO,aAAa,CACzCC,QAASF,EAAOE,UAEfkC,MAAK,SAACM,GACL,OAAIA,EAAIJ,GACCI,EAAIH,OAENC,QAAQC,OAAO,WAADP,OAAYQ,EAAIC,QACvC,IAIKV,MAAM,GAADC,OAAIlC,EAAOC,QAAO,UAAU,CACtCC,QAASF,EAAOE,UAEfkC,MAAK,SAACM,GACL,OAAIA,EAAIJ,GACCI,EAAIH,OAENC,QAAQC,OAAO,WAADP,OAAYQ,EAAIC,QACvC,MIkDCP,MAAK,SAAA4E,GAAuB,IAUZC,EAAOzG,E,IAVK0G,G,EAAA,E,4CAAAF,I,o2BAArBG,EAAQD,EAAA,GAUCD,EAVMC,EAAA,GAUC1G,EATH2G,EAASzF,IAUhCuF,EAAMzD,SAAQ,SAAU4D,GACtB,IAAM3G,EAAOL,EAAWgH,EAAUP,EAAYF,EAAenG,GAC7D0E,EAAWmC,OAAO5G,EACpB,IAoBF,SAAuBmC,GACrB0C,EAAY9D,YAAcoB,EAAKrB,KAC/BgE,EAAW/D,YAAcoB,EAAK0E,MAC9B,IAAMjG,EAAOuB,EAAK2E,OAClBlC,EAAUzD,MAAM4F,gBAAkB,QAAHtF,OAAWb,EAAI,KAChD,CArCMoG,CAAcN,EAChB,IACCnE,OAAM,SAACC,GACNC,QAAQD,MAAM,0BAA2BA,EAC3C,IAWJgC,EAAOzB,SAAQ,SAAUe,GACvBA,EAAQxC,UAAUsB,IAAI,qBACtBkB,EAAQ5C,iBAAiB,SAAS,SAAUsC,IF7E9C,SAAkCA,GAChC,IAAMyD,EAAgBzD,EAAM0D,OAAO5F,UAAUC,SAAS,gBAChD4F,EAAY3D,EAAM0D,OAAO5F,UAAUC,SAAS,SAC5C4B,EAAYlD,SAASC,cAAc,qBAEpC+G,GAAiBE,IAAchE,GAClCG,EAAWH,EAEf,CEsEIiE,CAAyB5D,EAC3B,GACF,IAGAwB,EAAc9D,iBAAiB,SAAS,WACtC6E,EAAYhF,YAAc,YAC1BoC,EAAU0C,GACVE,EAAYzE,UAAUsB,IAAI,0BAC1BkD,EAAYuB,QACZ3D,EAAgBoC,EAAa3B,EAC/B,IAWAY,EAAe7D,iBAAiB,SAAS,WACvCiC,EAAUkC,GACVG,EAAWzE,YAAc,YACzB2C,EAAgB2B,EAAclB,GAC9BmB,EAAUgC,MAAQzC,EAAY9D,YAC9BwE,EAAS+B,MAAQxC,EAAW/D,WAC9B,IAWA6D,EAAU1D,iBAAiB,SAAS,WAClCiC,EAAUsC,GACVG,EAAa7E,YAAc,YAC3B6E,EAAatE,UAAUsB,IAAI,0BAC3B8C,EAAW2B,OACb,IAGA1D,EAAYzC,iBAAiB,UAC7B,SAA0BqG,GACxBA,EAAIC,iBACJhC,EAAWzE,YAAc,gBACzB,IAAMD,EAAOwE,EAAUgC,MACjBG,EAAMlC,EAAS+B,OJtHvB,SAAuBxG,EAAM2G,GAC3B,OAAOjG,MAAM,GAADC,OAAIlC,EAAOC,QAAO,aAAa,CACzCkC,OAAQ,QACRjC,QAASF,EAAOE,QAChBiI,KAAMC,KAAKC,UAAU,CACnB9G,KAAMA,EACN+F,MAAOY,MAEV9F,MAAK,SAACC,GACH,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,WAADP,OAAYQ,IAAIC,QACvC,GACJ,EIyGE2F,CAAc/G,EAAM2G,GACjB9F,MAAK,SAACQ,GACLM,QAAQqF,IAAI,mBAAoB3F,GAChC0C,EAAY9D,YAAcD,EAC1BgE,EAAW/D,YAAc0G,EACzBnE,EAAW+B,EACb,IACC9C,OAAM,SAACC,GACNC,QAAQD,MAAM,4BAA6BA,EAC7C,IACCuF,SAAQ,WACPvC,EAAWzE,YAAc,WAC3B,GACJ,IAGA8E,EAAa3E,iBAAiB,UAC9B,SAAoBqG,GAClBA,EAAIC,iBACJzB,EAAYhF,YAAc,gBJzH5B,SAAkBiH,EAAOpH,GACvB,OAAOY,MAAM,GAADC,OAAIlC,EAAOC,QAAO,UAAU,CACtCkC,OAAQ,OACRjC,QAASF,EAAOE,QAChBiI,KAAMC,KAAKC,UAAU,CACnB9G,KAAMkH,EACNpH,KAAMA,MAEPe,MAAK,SAACC,GACP,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,WAADP,OAAYQ,IAAIC,QACvC,GACF,CI8GE+F,CAFcjC,EAAWsB,MACZrB,EAAUqB,OAEpB3F,MAAK,SAACQ,GACLM,QAAQqF,IAAI,mBAAoB3F,GAChC,IACM+F,EAAUvI,EAAWwC,EAAMiE,EAAYF,EAD9B/D,EAAKnB,MAAMC,KAE1BwD,EAAW0D,QAAQD,GACnB5E,EAAWuC,GACXC,EAAYuB,OACd,IACC9E,OAAM,SAACC,GACNC,QAAQD,MAAM,4BAA6BA,EAC7C,IACCuF,SAAQ,WACPhC,EAAYhF,YAAc,WAC5B,GACJ,IAGA0E,EAAYvE,iBAAiB,UAC7B,SAAsBqG,GJlFtB,IAAmB3G,EImFjB2G,EAAIC,iBACJ5B,EAAa7E,YAAc,iBJpFVH,EIqFJ+E,EAAY2B,MJpFlB9F,MAAM,GAADC,OAAIlC,EAAOC,QAAO,oBAAoB,CAChDC,QAASF,EAAOE,QAChBiC,OAAQ,QACRgG,KAAMC,KAAKC,UAAU,CACnBd,OAAQlG,MAETe,MAAK,SAACC,GACP,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,WAADP,OAAYQ,IAAIC,QACvC,KI2EGP,MAAK,SAACQ,GACLM,QAAQqF,IAAI,mBAAoB3F,GAChC,IAAMvB,EAAOuB,EAAK2E,OAClBlC,EAAUzD,MAAM4F,gBAAkB,QAAHtF,OAAWb,EAAI,MAC9C0C,EAAWmC,GACXC,EAAW2B,OACb,IACC9E,OAAM,SAACC,GACNC,QAAQD,MAAM,4BAA6BA,EAC7C,IACCuF,SAAQ,WACPnC,EAAa7E,YAAc,WAC7B,GACJ,IAGcd,SAAS2D,iBAAiB,gBAClCb,SAAQ,SAAUqF,IDvNC,SAAC7I,EAAQ6I,GACVA,EAAYxE,iBAAiBrE,EAAOsE,eAC5Cd,SAAQ,SAAUoD,GAC9BA,EAAMjF,iBAAiB,SAAS,WAoBpC,IAAiBmH,EACTpE,KADSoE,EAnBHlC,GAoBsBjC,mBAC9BmE,EAAaC,SAASC,iBACxBF,EAAarE,kBAAkBqE,EAAaG,QAAQC,cACpDxE,EAAalD,YAAcsH,EAAaK,kBACxCL,EAAa/G,UAAUsB,IAAI,2BAC3BqB,EAAa3C,UAAUsB,IAAI,0BAE3ByF,EAAa/G,UAAUgB,OAAO,2BAC9B2B,EAAa3C,UAAUgB,OAAO,wBAC9B2B,EAAalD,YAAc,IAExBsH,EAAaC,SAASK,OAKzBN,EAAa/G,UAAUgB,OAAO,2BAC9B2B,EAAa3C,UAAUgB,OAAO,wBAC9B2B,EAAalD,YAAc,KAN3BsH,EAAa/G,UAAUsB,IAAI,2BAC3BqB,EAAa3C,UAAUsB,IAAI,wBAC3BqB,EAAalD,YAAcsH,EAAaK,kBAjCxC,GACF,IACAN,EAAYlH,iBAAiB,UAAU,SAAUqG,GAC/CA,EAAIC,gBACN,GACF,CC8MEoB,CAAiBzE,EAAaiE,EAChC,ID3KA,SAAsB7I,GACNU,SAAS2D,iBAAiB,gBAClCb,SAAQ,SAAUqF,GACtB,IAAMS,EAAYC,MAAMC,KACtBX,EAAYxE,iBAAiBrE,EAAOsE,gBAEhCmF,EAAgBZ,EAAYlI,cAChCX,EAAO8E,sBAGTwE,EAAU9F,SAAQ,SAACsF,GACjBA,EAAanH,iBAAiB,SAAS,YAa7C,SAA2B+H,EAAeD,GACxCvG,QAAQqF,IAAImB,IAC2B,IAAnBA,EAPPC,MAAK,SAACpF,GACjB,OAAQA,EAAQwE,SAASK,KAC3B,KAMElG,QAAQqF,IAAI,cACZkB,EAAc1H,UAAUsB,IAAI,4BAE5BH,QAAQqF,IAAI,WACZkB,EAAc1H,UAAUgB,OAAO,0BAEnC,CArBQ6G,CAAkBN,EAAWG,EAC/B,GACF,GACF,GACF,CC8JAI,CAAajF,E","sources":["webpack://yandex_praktikum/./src/scripts/api.js","webpack://yandex_praktikum/./src/scripts/card.js","webpack://yandex_praktikum/./src/scripts/modal.js","webpack://yandex_praktikum/./src/scripts/validation.js","webpack://yandex_praktikum/./src/scripts/index.js"],"sourcesContent":["const config = {\r\n  baseUrl:\"https://nomoreparties.co/v1/wff-cohort-12\",\r\n  headers: {\r\n    authorization: \"63f0e1bd-551c-4a91-abdc-db7a53e874be\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nfunction getUserData() {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n})\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n}\r\n\r\nfunction getCardsData() {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n}\r\n\r\n///Редактирование профиля\r\nfunction updateProfile(name, job) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: job,\r\n    }),\r\n}).then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n}\r\n\r\n///Добавление новой карточки\r\nfunction postCard(place, link) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: place,\r\n      link: link,\r\n    }),\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\n///Удаление карточки\r\nfunction deleteServerCard(id) {\r\n  return fetch(`${config.baseUrl}/cards/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n}\r\n\r\n/// Поставить лайк\r\nfunction setLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    headers: config.headers,\r\n    method: \"PUT\",\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok.\");\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n}\r\n\r\n/// Удалить лайк\r\nfunction deleteLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    headers: config.headers,\r\n    method: \"DELETE\",\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\n/// Обновление аватара пользователя\r\nfunction newAvatar(link) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    headers: config.headers,\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({\r\n      avatar: link,\r\n    }),\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\nexport {\r\n  getUserData,\r\n  getCardsData,\r\n  updateProfile,\r\n  postCard,\r\n  deleteServerCard,\r\n  setLike,\r\n  deleteLike,\r\n  newAvatar,\r\n};\r\n","import { setLike, deleteLike } from \"./api.js\";\r\n\r\nfunction createCard(cardElements, deleteFunc, openImg, userId) {\r\n  const template = document.querySelector(\"#card-template\").content;\r\n  const card = template.querySelector(\".places__item.card\").cloneNode(true);\r\n  const button = card.querySelector(\".card__delete-button\");\r\n  const cardContainer = card.querySelector(\".card__description\");\r\n  const likesBox = cardContainer.querySelector(\".likeCounter\");\r\n  const likeButton = cardContainer.querySelector(\".card__like-button\");\r\n  const cardImage = card.querySelector(\".card__image\");\r\n  const cardDescription = card.querySelector(\".card__title\");\r\n  cardImage.src = cardElements.link;\r\n  cardImage.alt = \"Фотография: \" + cardElements.name;\r\n  cardDescription.textContent = cardElements.name;\r\n  cardImage.name = cardElements.name;\r\n  /// УДАЛЕНИЕ КАРТОЧКИ\r\n  if (userId === cardElements.owner._id) {\r\n    button.addEventListener(\"click\", function () {\r\n      deleteFunc(card, cardElements._id);\r\n    });\r\n  } else {\r\n    button.style.display = \"none\";\r\n  }\r\n\r\n  likeButton.addEventListener(\"click\", function () {\r\n    if (likeButton.classList.contains(\"card__like-button_is-active\")) {\r\n      deleteLike(cardElements._id)\r\n        .then((data) => {\r\n          likesBox.textContent = data.likes.length;\r\n          likeButton.classList.remove(\"card__like-button_is-active\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Failed to update profile:\", error);\r\n        });\r\n    } else {\r\n      setLike(cardElements._id)\r\n        .then(() => {\r\n          likeButton.classList.add(\"card__like-button_is-active\");\r\n          likesBox.textContent = parseInt(likesBox.textContent) + 1;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Failed to update like:\", error);\r\n        });\r\n    }\r\n  });\r\n\r\n  /// ОТОБРАЖЕНИЕ КОЛИЧЕСТВА ЛАЙКОВ\r\n  checkLike(cardElements, userId, likeButton);\r\n  const likeNumber = cardElements.likes.length;\r\n  likesBox.textContent = likeNumber;\r\n  /// РАЗВЕРНУТЬ КАРТИНКУ\r\n  cardImage.addEventListener(\"click\", function () {\r\n    openImg(cardImage);\r\n  });\r\n  return card;\r\n}\r\n\r\nfunction checkLike(card, userId, btn) {\r\n  const userArray = card.likes;\r\n  userArray.forEach(function (user) {\r\n    if (user._id === userId) {\r\n      btn.classList.add(\"card__like-button_is-active\");\r\n    }\r\n  });\r\n}\r\n\r\nexport { createCard };\r\n","// ОТКРЫТИЕ И ЗАКРЫТИЕ МОДАЛЬНЫХ ОКОН\r\nfunction openModal(modal) {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", handleEscClose);\r\n}\r\n\r\nfunction closeModal(modal) {\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscClose);\r\n}\r\n\r\nfunction handleEscClose(event) {\r\n  if (event.key === \"Escape\" || event.key === 27) {\r\n    const openModal = document.querySelector(\".popup_is-opened\");\r\n    if (openModal) {\r\n      closeModal(openModal);\r\n    }\r\n  }\r\n}\r\n\r\n// Обработчик закрытия модального окна по клику на крестик или оверлей\r\nfunction setupCloseEventListeners(event) {\r\n  const isCloseButton = event.target.classList.contains(\"popup__close\");\r\n  const isOverlay = event.target.classList.contains(\"popup\");\r\n  const openModal = document.querySelector(\".popup_is-opened\");\r\n\r\n  if ((isCloseButton || isOverlay) && openModal) {\r\n    closeModal(openModal);\r\n  }\r\n}\r\n\r\nexport { openModal, closeModal, setupCloseEventListeners };\r\n","const enableValidation = (config, formElement) => {\r\n  const inputElements = formElement.querySelectorAll(config.inputSelector);\r\n  inputElements.forEach(function (input) {\r\n    input.addEventListener(\"input\", function () {\r\n      isValid(input);\r\n    });\r\n  });\r\n  formElement.addEventListener(\"submit\", function (evt) {\r\n    evt.preventDefault();\r\n  });\r\n};\r\n\r\nfunction clearValidation(profileForm, config) {\r\n  const inputElements = profileForm.querySelectorAll(config.inputSelector);\r\n  inputElements.forEach((element) => {\r\n    element.classList.remove(config.inputErrorClass);\r\n    element.setCustomValidity(\"\");\r\n    const errorElement = element.nextElementSibling;\r\n    errorElement.classList.remove(\"popup__error_visible\");\r\n    errorElement.textContent = \"\";\r\n  });\r\n}\r\n\r\nfunction isValid(inputElement) {\r\n  const errorElement = inputElement.nextElementSibling;\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    errorElement.textContent = inputElement.validationMessage;\r\n    inputElement.classList.add(\"popup__input_type_error\");\r\n    errorElement.classList.add(\"popup__error_visible\");\r\n  } else {\r\n    inputElement.classList.remove(\"popup__input_type_error\");\r\n    errorElement.classList.remove(\"popup__error_visible\");\r\n    errorElement.textContent = \"\";\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    inputElement.classList.add(\"popup__input_type_error\");\r\n    errorElement.classList.add(\"popup__error_visible\");\r\n    errorElement.textContent = inputElement.validationMessage;\r\n  } else {\r\n    inputElement.classList.remove(\"popup__input_type_error\");\r\n    errorElement.classList.remove(\"popup__error_visible\");\r\n    errorElement.textContent = \"\";\r\n  }\r\n}\r\n\r\nfunction enableToggle(config) {\r\n  const forms = document.querySelectorAll(\".popup__form\");\r\n  forms.forEach(function (formElement) {\r\n    const inputList = Array.from(\r\n      formElement.querySelectorAll(config.inputSelector)\r\n    );\r\n    const buttonElement = formElement.querySelector(\r\n      config.submitButtonSelector\r\n    );\r\n\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener(\"input\", function () {\r\n        toggleButtonState(inputList, buttonElement);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction hasInvalidInput(input) {\r\n  return input.some((element) => {\r\n    return !element.validity.valid;\r\n  });\r\n}\r\n\r\nfunction toggleButtonState(inputElements, buttonElement) {\r\n  console.log(inputElements);\r\n  if (hasInvalidInput(inputElements) === true) {\r\n    console.log(\"не валидно\");\r\n    buttonElement.classList.add(\"popup__button_disabled\");\r\n  } else {\r\n    console.log(\"валидно\");\r\n    buttonElement.classList.remove(\"popup__button_disabled\");\r\n  }\r\n}\r\n\r\nexport { enableValidation, clearValidation, isValid, enableToggle };\r\n","import { createCard } from \"./card.js\";\r\n\r\nimport { openModal, closeModal, setupCloseEventListeners } from \"./modal.js\";\r\n\r\nimport {\r\n  getUserData,\r\n  getCardsData,\r\n  updateProfile,\r\n  postCard,\r\n  deleteServerCard,\r\n  newAvatar,\r\n} from \"./api.js\";\r\n\r\nimport {\r\n  enableValidation,\r\n  clearValidation,\r\n  enableToggle,\r\n} from \"./validation.js\";\r\n\r\nconst objElements = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nconst content = document.querySelector(\".content\");\r\nconst popups = document.querySelectorAll(\".popup\");\r\nconst pageSection = content.querySelector(\".places.page__section\");\r\nconst placesList = pageSection.querySelector(\".places__list\");\r\nconst profile = content.querySelector(\".profile.page__section\");\r\nconst profileInfo = profile.querySelector(\".profile__info\");\r\nconst avatarImg = profile.querySelector(\".profile__image\");\r\nconst nameContent = profileInfo.querySelector(\".profile__title\");\r\nconst jobContent = profileInfo.querySelector(\".profile__description\");\r\nconst profileEditBtn = profileInfo.querySelector(\".profile__edit-button\");\r\nconst profileAddBtn = profile.querySelector(\".profile__add-button\");\r\n///  РАЗВЕРНУТЬ КАРТИНКУ\r\nconst popupCardImg = document.querySelector(\".popup.popup_type_image\");\r\nconst popupContImg = popupCardImg.querySelector(\r\n  \".popup__content.popup__content_content_image\"\r\n);\r\nconst popupImg = popupContImg.querySelector(\".popup__image\");\r\nconst popupImgCaption = popupContImg.querySelector(\".popup__caption\");\r\n/// РЕДАКТИРОВАТЬ ПРОФИЛЬ\r\nconst popupProfile = document.querySelector(\".popup.popup_type_edit\");\r\nconst profileCont = popupProfile.querySelector(\".popup__content\");\r\nconst profileForm = profileCont.querySelector(\".popup__form\");\r\nconst nameInput = profileForm.querySelector(\r\n  \".popup__input.popup__input_type_name\"\r\n);\r\nconst jobInput = profileForm.querySelector(\r\n  \".popup__input.popup__input_type_description\"\r\n);\r\nconst profileBtn = profileForm.querySelector(\".button.popup__button\");\r\n/// РЕДАКТИРОВАНИЕ ПРОФИЛЯ\r\nconst popupAvatar = document.querySelector(\".popup.popup_type_new-avatar\");\r\nconst avatarCont = popupAvatar.querySelector(\".popup__content\");\r\nconst avatarForm = avatarCont.querySelector(\".popup__form\");\r\nconst inputAvatar = avatarForm.querySelector(\r\n  \".popup__input.popup__input_type_url\"\r\n);\r\nconst avatarButton = avatarForm.querySelector(\".button.popup__button\");\r\n/// ФОРМА ДОБАВЛЕНИЯ НОВЫХ КАРТОЧЕК\r\nconst popupNewCard = document.querySelector(\".popup.popup_type_new-card\");\r\nconst newCardCont = popupNewCard.querySelector(\".popup__content\");\r\nconst newCardForm = newCardCont.querySelector(\".popup__form\");\r\nconst popupButton = newCardForm.querySelector(\".button.popup__button\");\r\nconst placeInput = newCardForm.querySelector(\r\n  \".popup__input.popup__input_type_card-name\"\r\n);\r\nconst linkInput = newCardForm.querySelector(\r\n  \".popup__input.popup__input_type_url\"\r\n);\r\n\r\nfunction allFetch() {\r\n  Promise.all([getUserData(), getCardsData()])\r\n    .then(([userData, cards]) => {\r\n      createCards(cards, userData._id);\r\n      createProfile(userData);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error processing data: \", error);\r\n    });\r\n}\r\nallFetch();\r\n\r\nfunction createCards(array, userId) {\r\n  array.forEach(function (elements) {\r\n    const card = createCard(elements, deleteCard, openImgWindow, userId);\r\n    placesList.append(card);\r\n  });\r\n}\r\n\r\npopups.forEach(function (element) {\r\n  element.classList.add(\"popup_is-animated\");\r\n  element.addEventListener(\"click\", function (event) {\r\n    setupCloseEventListeners(event);\r\n  });\r\n});\r\n\r\n/// ОТКРЫТИЕ ФОРМЫ ДОБАВЛЕНИЯ КАРТОЧЕК\r\nprofileAddBtn.addEventListener(\"click\", function () {\r\n  popupButton.textContent = \"Сохранить\";\r\n  openModal(popupNewCard);\r\n  popupButton.classList.add(\"popup__button_disabled\");\r\n  newCardForm.reset();\r\n  clearValidation(newCardForm, objElements);\r\n});\r\n\r\n/// ОТОБРАЖЕНИЕ ДАННЫХ ПРОФИЛЯ\r\nfunction createProfile(data) {\r\n  nameContent.textContent = data.name;\r\n  jobContent.textContent = data.about;\r\n  const link = data.avatar;\r\n  avatarImg.style.backgroundImage = `url('${link}')`;\r\n}\r\n\r\n/// ОТКРЫТИЕ РЕДАКТИРОВАНИЯ ПРОФИЛЯ\r\nprofileEditBtn.addEventListener(\"click\", function () {\r\n  openModal(popupProfile);\r\n  profileBtn.textContent = \"Сохранить\";\r\n  clearValidation(popupProfile, objElements);\r\n  nameInput.value = nameContent.textContent;\r\n  jobInput.value = jobContent.textContent;\r\n});\r\n\r\n/// ОТКРЫТИЕ ПОЛНОЭКРАННОЙ КАРТИНКИ\r\nfunction openImgWindow(input) {\r\n  openModal(popupCardImg);\r\n  popupImg.src = input.src;\r\n  popupImg.alt = input.alt;\r\n  popupImgCaption.textContent = input.name;\r\n}\r\n\r\n/// ОТКРЫТИЕ РЕДАКТИРОВАНИЕ АВАТАРА\r\navatarImg.addEventListener(\"click\", function () {\r\n  openModal(popupAvatar);\r\n  avatarButton.textContent = \"Сохранить\";\r\n  avatarButton.classList.add(\"popup__button_disabled\");\r\n  avatarForm.reset();\r\n});\r\n\r\n/// РЕДАКТИРОВАНИЕ ПРОФИЛЯ\r\nprofileForm.addEventListener(\"submit\", handleFormSubmit);\r\nfunction handleFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  profileBtn.textContent = \"Сохранение...\";\r\n  const name = nameInput.value;\r\n  const job = jobInput.value;\r\n  updateProfile(name, job)\r\n    .then((data) => {\r\n      console.log(\"Profile updated:\", data);\r\n      nameContent.textContent = name;\r\n      jobContent.textContent = job;\r\n      closeModal(popupProfile);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to update profile:\", error);\r\n    })\r\n    .finally(() => {\r\n      profileBtn.textContent = \"Сохранить\";\r\n    });\r\n}\r\n\r\n/// ДОБАВЛЕНИЕ НОВОЙ КАРТОЧКИ\r\npopupNewCard.addEventListener(\"submit\", formSubmit);\r\nfunction formSubmit(evt) {\r\n  evt.preventDefault();\r\n  popupButton.textContent = \"Сохранение...\";\r\n  const place = placeInput.value;\r\n  const link = linkInput.value;\r\n  postCard(place, link)\r\n    .then((data) => {\r\n      console.log(\"Profile updated:\", data);\r\n      const userId = data.owner._id;\r\n      const newCard = createCard(data, deleteCard, openImgWindow, userId);\r\n      placesList.prepend(newCard);\r\n      closeModal(popupNewCard);\r\n      newCardForm.reset();\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to update profile:\", error);\r\n    })\r\n    .finally(() => {\r\n      popupButton.textContent = \"Сохранить\";\r\n    });\r\n}\r\n\r\n/// РЕДАКТИРОВАНИЕ АВАТАРА ПОЛЬЗОВАТЕЛЯ\r\npopupAvatar.addEventListener(\"submit\", avatarSubmit);\r\nfunction avatarSubmit(evt) {\r\n  evt.preventDefault();\r\n  avatarButton.textContent = \"Сохранение...\";\r\n  const link = inputAvatar.value;\r\n  newAvatar(link)\r\n    .then((data) => {\r\n      console.log(\"Profile updated:\", data);\r\n      const link = data.avatar;\r\n      avatarImg.style.backgroundImage = `url('${link}')`;\r\n      closeModal(popupAvatar);\r\n      avatarForm.reset();\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to update profile:\", error);\r\n    })\r\n    .finally(() => {\r\n      avatarButton.textContent = \"Сохранить\";\r\n    });\r\n}\r\n\r\n/// ОБЕСПЕЧЕНИЕ ВАЛИДАЦИИ\r\nconst forms = document.querySelectorAll(\".popup__form\");\r\nforms.forEach(function (formElement) {\r\n  enableValidation(objElements, formElement);\r\n});\r\n\r\n/// ОБЕСПЕЧЕНИЕ ПЕРЕКЛЮЧЕНИЯ СОСТОЯНИЯ КНОПОК\r\nenableToggle(objElements);\r\nfunction deleteCard(input, cardId) {\r\n  deleteServerCard(cardId)\r\n    .then(() => {\r\n      input.remove();\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to remove card:\", error);\r\n    });\r\n}\r\n"],"names":["config","baseUrl","headers","authorization","createCard","cardElements","deleteFunc","openImg","userId","card","document","querySelector","content","cloneNode","button","cardContainer","likesBox","likeButton","cardImage","cardDescription","src","link","alt","name","textContent","owner","_id","addEventListener","style","display","id","classList","contains","fetch","concat","method","then","response","ok","json","Promise","reject","res","status","data","likes","length","remove","catch","error","console","Error","setLike","add","parseInt","btn","forEach","user","checkLike","likeNumber","openModal","modal","handleEscClose","closeModal","removeEventListener","event","key","clearValidation","profileForm","querySelectorAll","inputSelector","element","inputErrorClass","setCustomValidity","errorElement","nextElementSibling","objElements","formSelector","submitButtonSelector","inactiveButtonClass","errorClass","popups","placesList","profile","profileInfo","avatarImg","nameContent","jobContent","profileEditBtn","profileAddBtn","popupCardImg","popupContImg","popupImg","popupImgCaption","popupProfile","nameInput","jobInput","profileBtn","popupAvatar","avatarForm","inputAvatar","avatarButton","popupNewCard","newCardForm","popupButton","placeInput","linkInput","openImgWindow","input","deleteCard","cardId","all","_ref","array","_ref2","userData","elements","append","about","avatar","backgroundImage","createProfile","isCloseButton","target","isOverlay","setupCloseEventListeners","reset","value","evt","preventDefault","job","body","JSON","stringify","updateProfile","log","finally","place","postCard","newCard","prepend","formElement","inputElement","validity","patternMismatch","dataset","errorMessage","validationMessage","valid","enableValidation","inputList","Array","from","buttonElement","inputElements","some","toggleButtonState","enableToggle"],"sourceRoot":""}