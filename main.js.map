{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/scripts/card.js","webpack://yandex_praktikum/./src/scripts/modal.js","webpack://yandex_praktikum/./src/scripts/api.js","webpack://yandex_praktikum/./src/scripts/validation.js","webpack://yandex_praktikum/./src/scripts/index.js"],"sourcesContent":["function createCard(cardElements, deleteFunc, likeFunc, openImg, userId) {\r\n  const template = document.querySelector(\"#card-template\").content;\r\n  const card = template.querySelector(\".places__item.card\").cloneNode(true);\r\n  const button = card.querySelector(\".card__delete-button\");\r\n  const cardContainer = card.querySelector(\".card__description\");\r\n  const likesBox = cardContainer.querySelector(\".likeCounter\");\r\n  const likeButton = cardContainer.querySelector(\".card__like-button\");\r\n  const cardImage = card.querySelector(\".card__image\");\r\n  const cardDescription = card.querySelector(\".card__title\");\r\n\r\n  cardImage.src = cardElements.link;\r\n  cardImage.alt = \"Фотография: \" + cardElements.name;\r\n  cardDescription.textContent = cardElements.name;\r\n  cardImage.name = cardElements.name;\r\n\r\n  /// УДАЛЕНИЕ КАРТОЧКИ\r\n  if (userId === cardElements.owner._id) {\r\n    button.addEventListener(\"click\", function () {\r\n      deleteFunc(card, cardElements._id);\r\n    });\r\n  } else {\r\n    button.style.display = \"none\";\r\n  }\r\n  /// КНОПКА ЛАЙК\r\n  likeButton.addEventListener(\"click\", function () {\r\n    likeFunc(likeButton, cardElements, likesBox);\r\n  });\r\n\r\n  /// ОТОБРАЖЕНИЕ КОЛИЧЕСТВА ЛАЙКОВ\r\n  checkLike(cardElements, userId, likeButton);\r\n  const likeNumber = cardElements.likes.length;\r\n  likesBox.textContent = likeNumber;\r\n\r\n  ///  РАЗВЕРНУТЬ КАРТИНКУ\r\n  cardImage.addEventListener(\"click\", function () {\r\n    openImg(cardImage);\r\n  });\r\n\r\n  return card;\r\n}\r\n\r\nfunction checkLike(card, userId, btn) {\r\n  const userArray = card.likes;\r\n  userArray.forEach(function (user) {\r\n    if (user._id === userId) {\r\n      btn.classList.add(\"card__like-button_is-active\");\r\n    }\r\n  });\r\n}\r\n\r\nexport { createCard };\r\n","// ОТКРЫТИЕ И ЗАКРЫТИЕ МОДАЛЬНЫХ ОКОН\r\nfunction openModal(modal) {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", handleEscClose);\r\n}\r\n\r\nfunction closeModal(modal) {\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscClose);\r\n}\r\n\r\nfunction handleEscClose(event) {\r\n  if (event.key === \"Escape\" || event.key === 27) {\r\n    const openModal = document.querySelector(\".popup_is-opened\");\r\n    if (openModal) {\r\n      closeModal(openModal);\r\n    }\r\n  }\r\n}\r\n\r\n// Обработчик закрытия модального окна по клику на крестик или оверлей\r\nfunction setupCloseEventListeners(event) {\r\n  const isCloseButton = event.target.classList.contains(\"popup__close\");\r\n  const isOverlay = event.target.classList.contains(\"popup\");\r\n  const openModal = document.querySelector(\".popup_is-opened\");\r\n\r\n  if ((isCloseButton || isOverlay) && openModal) {\r\n    closeModal(openModal);\r\n  }\r\n}\r\n\r\nexport { openModal, closeModal, setupCloseEventListeners };\r\n","function getUserData() {\r\n  return fetch(\"https://nomoreparties.co/v1/wff-cohort-12/users/me\", {\r\n    headers: {\r\n      authorization: \"63f0e1bd-551c-4a91-abdc-db7a53e874be\",\r\n    },\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error fetching data: \", error);\r\n    });\r\n}\r\n\r\nfunction getCardsData() {\r\n  return fetch(\"https://nomoreparties.co/v1/wff-cohort-12/cards\", {\r\n    headers: {\r\n      authorization: \"63f0e1bd-551c-4a91-abdc-db7a53e874be\",\r\n    },\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error fetching data: \", error);\r\n    });\r\n}\r\n\r\n///Редактирование профиля\r\nfunction updateProfile(name, job) {\r\n  fetch(\"https://nomoreparties.co/v1/wff-cohort-12/users/me\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: \"63f0e1bd-551c-4a91-abdc-db7a53e874be\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: job,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .then((data) => {\r\n      console.log(\"Profile updated:\", data);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to update profile:\", error);\r\n    });\r\n}\r\n\r\n///Добавление новой карточки\r\nfunction postCard(place, link) {\r\n  return fetch(\"https://nomoreparties.co/v1/wff-cohort-12/cards\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: \"63f0e1bd-551c-4a91-abdc-db7a53e874be\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: place,\r\n      link: link,\r\n    }),\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\n///Удаление карточки\r\nfunction deleteServerCard(id) {\r\n  const url = \"https://nomoreparties.co/v1/wff-cohort-12/cards/\";\r\n  fetch(url + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: \"63f0e1bd-551c-4a91-abdc-db7a53e874be\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .then((data) => {\r\n      console.log(\"Profile updated:\", data);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to update profile:\", error);\r\n    });\r\n}\r\n\r\n/// Поставить лайк\r\nfunction setLike(id) {\r\n  const url = \"https://nomoreparties.co/v1/wff-cohort-12/cards/likes/\";\r\n  return fetch(url + id, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      authorization: \"63f0e1bd-551c-4a91-abdc-db7a53e874be\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok.\");\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to update like:\", error);\r\n      throw error;\r\n    });\r\n}\r\n\r\n/// Удалить лайк\r\nfunction deleteLike(id) {\r\n  const url = \"https://nomoreparties.co/v1/wff-cohort-12/cards/likes/\";\r\n  return fetch(url + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: \"63f0e1bd-551c-4a91-abdc-db7a53e874be\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\n/// Обновление аватара пользователя\r\nfunction newAvatar(link) {\r\n  return fetch(\"https://nomoreparties.co/v1/wff-cohort-12/users/me/avatar\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: \"63f0e1bd-551c-4a91-abdc-db7a53e874be\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      avatar: link,\r\n    }),\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\nexport {\r\n  getUserData,\r\n  getCardsData,\r\n  updateProfile,\r\n  postCard,\r\n  deleteServerCard,\r\n  setLike,\r\n  deleteLike,\r\n  newAvatar,\r\n};\r\n","const objElements = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nconst enableValidation = (config, formElement) => {\r\n  const inputElements = formElement.querySelectorAll(config.inputSelector);\r\n  inputElements.forEach(function (input) {\r\n    input.addEventListener(\"input\", function () {\r\n      if (input.id !== \"url\") {\r\n        isValid(input);\r\n      }\r\n    });\r\n  });\r\n  formElement.addEventListener(\"submit\", function (evt) {\r\n    evt.preventDefault();\r\n  });\r\n};\r\n\r\nfunction isValid(inputElement) {\r\n  const errorElement = inputElement.nextElementSibling;\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    errorElement.textContent = inputElement.validationMessage;\r\n    inputElement.classList.add(\"popup__input_type_error\");\r\n    errorElement.classList.add(\"popup__error_visible\");\r\n  } else {\r\n    inputElement.classList.remove(\"popup__input_type_error\");\r\n    errorElement.classList.remove(\"popup__error_visible\");\r\n    errorElement.textContent = \"\";\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n}\r\n\r\nfunction enableToggle(config) {\r\n  const forms = document.querySelectorAll(\".popup__form\");\r\n  forms.forEach(function (formElement) {\r\n    const inputList = Array.from(\r\n      formElement.querySelectorAll(config.inputSelector)\r\n    );\r\n    const buttonElement = formElement.querySelector(\r\n      config.submitButtonSelector\r\n    );\r\n\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener(\"input\", function () {\r\n        toggleButtonState(inputList, buttonElement);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction hasInvalidInput(input) {\r\n  return input.some((element) => {\r\n    return !element.validity.valid;\r\n  });\r\n}\r\n\r\nfunction toggleButtonState(inputElements, buttonElement) {\r\n  console.log(inputElements);\r\n  if (hasInvalidInput(inputElements) === true) {\r\n    console.log(\"не валидно\");\r\n    buttonElement.classList.add(\"popup__button_disabled\");\r\n  } else {\r\n    console.log(\"валидно\");\r\n    buttonElement.classList.remove(\"popup__button_disabled\");\r\n  }\r\n}\r\n\r\nfunction clearValidation(profileForm, config) {\r\n  const inputElements = profileForm.querySelectorAll(config.inputSelector);\r\n  inputElements.forEach((element) => {\r\n    element.classList.remove(config.inputErrorClass);\r\n    element.setCustomValidity(\"\");\r\n    const errorElement = element.nextElementSibling;\r\n    errorElement.classList.remove(\"popup__error_visible\");\r\n    errorElement.textContent = \"\";\r\n  });\r\n}\r\n\r\nexport {\r\n  objElements,\r\n  enableValidation,\r\n  isValid,\r\n  enableToggle,\r\n  hasInvalidInput,\r\n  toggleButtonState,\r\n  clearValidation,\r\n};\r\n","import { createCard } from \"./card.js\";\r\n\r\nimport { openModal, closeModal, setupCloseEventListeners } from \"./modal.js\";\r\n\r\nimport {\r\n  getUserData,\r\n  getCardsData,\r\n  updateProfile,\r\n  postCard,\r\n  deleteServerCard,\r\n  setLike,\r\n  deleteLike,\r\n  newAvatar,\r\n} from \"./api.js\";\r\n\r\nimport {\r\n  objElements,\r\n  enableValidation,\r\n  enableToggle,\r\n  clearValidation,\r\n} from \"./validation.js\";\r\n\r\nconst content = document.querySelector(\".content\");\r\nconst popups = document.querySelectorAll(\".popup\");\r\nconst pageSection = content.querySelector(\".places.page__section\");\r\nconst placesList = pageSection.querySelector(\".places__list\");\r\nconst profile = content.querySelector(\".profile.page__section\");\r\nconst profileInfo = profile.querySelector(\".profile__info\");\r\nconst avatarImg = profile.querySelector(\".profile__image\");\r\nconst nameContent = profileInfo.querySelector(\".profile__title\");\r\nconst jobContent = profileInfo.querySelector(\".profile__description\");\r\nconst profileEditBtn = profileInfo.querySelector(\".profile__edit-button\");\r\nconst profileAddBtn = profile.querySelector(\".profile__add-button\");\r\n///  РАЗВЕРНУТЬ КАРТИНКУ\r\nconst popupCardImg = document.querySelector(\".popup.popup_type_image\");\r\nconst popupContImg = popupCardImg.querySelector(\r\n  \".popup__content.popup__content_content_image\"\r\n);\r\nconst popupImg = popupContImg.querySelector(\".popup__image\");\r\nconst popupImgCaption = popupContImg.querySelector(\".popup__caption\");\r\n/// РЕДАКТИРОВАТЬ ПРОФИЛЬ\r\nconst popupProfile = document.querySelector(\".popup.popup_type_edit\");\r\nconst profileCont = popupProfile.querySelector(\".popup__content\");\r\nconst profileForm = profileCont.querySelector(\".popup__form\");\r\nconst nameInput = profileForm.querySelector(\r\n  \".popup__input.popup__input_type_name\"\r\n);\r\nconst jobInput = profileForm.querySelector(\r\n  \".popup__input.popup__input_type_description\"\r\n);\r\nconst profileBtn = profileForm.querySelector(\".button.popup__button\");\r\n/// РЕДАКТИРОВАНИЕ ПРОФИЛЯ\r\nconst popupAvatar = document.querySelector(\".popup.popup_type_new-avatar\");\r\nconst avatarCont = popupAvatar.querySelector(\".popup__content\");\r\nconst avatarForm = avatarCont.querySelector(\".popup__form\");\r\nconst inputAvatar = avatarForm.querySelector(\r\n  \".popup__input.popup__input_type_url\"\r\n);\r\nconst avatarButton = avatarForm.querySelector(\".button.popup__button\");\r\n/// ФОРМА ДОБАВЛЕНИЯ НОВЫХ КАРТОЧЕК\r\nconst popupNewCard = document.querySelector(\".popup.popup_type_new-card\");\r\nconst newCardCont = popupNewCard.querySelector(\".popup__content\");\r\nconst newCardForm = newCardCont.querySelector(\".popup__form\");\r\nconst popupButton = newCardForm.querySelector(\".button.popup__button\");\r\nconst placeInput = newCardForm.querySelector(\r\n  \".popup__input.popup__input_type_card-name\"\r\n);\r\nconst linkInput = newCardForm.querySelector(\r\n  \".popup__input.popup__input_type_url\"\r\n);\r\n\r\nfunction allFetch() {\r\n  Promise.all([getUserData(), getCardsData()])\r\n    .then(([userData, cards]) => {\r\n      createCards(cards, userData._id);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error processing data: \", error);\r\n    });\r\n}\r\nallFetch();\r\n\r\nfunction createCards(array, userId) {\r\n  array.forEach(function (elements) {\r\n    const card = createCard(\r\n      elements,\r\n      deleteCard,\r\n      likeReaction,\r\n      openImgWindow,\r\n      userId\r\n    );\r\n    placesList.append(card);\r\n  });\r\n}\r\n\r\npopups.forEach(function (element) {\r\n  element.classList.add(\"popup_is-animated\");\r\n  element.addEventListener(\"click\", function (event) {\r\n    setupCloseEventListeners(event);\r\n  });\r\n});\r\n\r\n/// ОТКРЫТИЕ ФОРМЫ ДОБАВЛЕНИЯ КАРТОЧЕК\r\nprofileAddBtn.addEventListener(\"click\", function () {\r\n  openModal(popupNewCard);\r\n  popupButton.classList.add(\"popup__button_disabled\");\r\n  newCardForm.reset();\r\n  popupButton.textContent = \"Сохранить\";\r\n  clearValidation(newCardForm, objElements);\r\n});\r\n\r\n/// ПОЛУЧЕНИЕ ДАННЫХ ДЛЯ ПРОФИЛЯ\r\ngetUserData()\r\n  .then((data) => {\r\n    if (data) {\r\n      createProfile(data);\r\n    }\r\n  })\r\n  .catch((error) => {\r\n    console.error(\"Error handling data: \", error);\r\n  });\r\n\r\n/// ОТОБРАЖЕНИЕ ДАННЫХ ПРОФИЛЯ\r\nfunction createProfile(data) {\r\n  nameContent.textContent = data.name;\r\n  jobContent.textContent = data.about;\r\n  const link = data.avatar;\r\n  avatarImg.style.backgroundImage = `url('${link}')`;\r\n}\r\n\r\n/// ОТКРЫТИЕ РЕДАКТИРОВАНИЯ ПРОФИЛЯ\r\nprofileEditBtn.addEventListener(\"click\", function () {\r\n  openModal(popupProfile);\r\n  profileBtn.textContent = \"Сохранить\";\r\n  clearValidation(popupProfile, objElements);\r\n  nameInput.value = nameContent.textContent;\r\n  jobInput.value = jobContent.textContent;\r\n});\r\n\r\n/// ОТКРЫТИЕ ПОЛНОЭКРАННОЙ КАРТИНКИ\r\nfunction openImgWindow(input) {\r\n  openModal(popupCardImg);\r\n  popupImg.src = input.src;\r\n  popupImg.alt = input.alt;\r\n  popupImgCaption.textContent = input.name;\r\n}\r\n\r\n/// РЕДАКТИРОВАНИЕ ПРОФИЛЯ\r\nprofileForm.addEventListener(\"submit\", handleFormSubmit);\r\nfunction handleFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  const name = nameInput.value;\r\n  const job = jobInput.value;\r\n  updateProfile(name, job);\r\n  profileBtn.textContent = \"Сохранение...\";\r\n  nameContent.textContent = name;\r\n  jobContent.textContent = job;\r\n  closeModal(popupProfile);\r\n}\r\n\r\n/// ДОБАВЛЕНИЕ НОВОЙ КАРТОЧКИ\r\npopupNewCard.addEventListener(\"submit\", formSubmit);\r\nfunction formSubmit(evt) {\r\n  evt.preventDefault();\r\n  const place = placeInput.value;\r\n  const link = linkInput.value;\r\n  postCard(place, link)\r\n    .then((data) => {\r\n      console.log(\"Profile updated:\", data);\r\n      const userId = data.owner._id;\r\n      const newCard = createCard(\r\n        data,\r\n        deleteCard,\r\n        likeReaction,\r\n        openImgWindow,\r\n        userId\r\n      );\r\n      placesList.prepend(newCard);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to update profile:\", error);\r\n    });\r\n  popupButton.textContent = \"Сохранение...\";\r\n  newCardForm.reset();\r\n  closeModal(popupNewCard);\r\n}\r\n\r\n/// ОТКРЫТЬ РЕДАКТИРОВАНИЕ АВАТАРА\r\navatarImg.addEventListener(\"click\", function () {\r\n  openModal(popupAvatar);\r\n  avatarButton.classList.add(\"popup__button_disabled\");\r\n  avatarForm.reset();\r\n  avatarButton.textContent = \"Сохранить\";\r\n});\r\n\r\n/// РЕДАКТИРОВАНИЕ АВАТАРА ПОЛЬЗОВАТЕЛЯ\r\npopupAvatar.addEventListener(\"submit\", avatarSubmit);\r\nfunction avatarSubmit(evt) {\r\n  evt.preventDefault();\r\n  const link = inputAvatar.value;\r\n  newAvatar(link)\r\n    .then((data) => {\r\n      console.log(\"Profile updated:\", data);\r\n      const link = data.avatar;\r\n      avatarImg.style.backgroundImage = `url('${link}')`;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to update profile:\", error);\r\n    });\r\n  avatarButton.textContent = \"Сохранение...\";\r\n  closeModal(popupAvatar);\r\n  avatarForm.reset();\r\n}\r\n\r\n/// ОБЕСПЕЧЕНИЕ ВАЛИДАЦИИ\r\nconst forms = document.querySelectorAll(\".popup__form\");\r\nforms.forEach(function (formElement) {\r\n  enableValidation(objElements, formElement);\r\n});\r\n\r\n/// ОБЕСПЕЧЕНИЕ ПЕРЕКЛЮЧЕНИЯ СОСТОЯНИЯ КНОПОК\r\nenableToggle(objElements);\r\nfunction deleteCard(input, cardId) {\r\n  input.remove();\r\n  deleteServerCard(cardId);\r\n}\r\n\r\nfunction likeReaction(btn, cardElements, likeBox) {\r\n  btn.classList.toggle(\"card__like-button_is-active\");\r\n  const cardId = cardElements._id;\r\n  if (btn.classList.contains(\"card__like-button_is-active\")) {\r\n    likeBox.textContent = parseInt(likeBox.textContent) + 1;\r\n    setLike(cardId)\r\n      .then((data) => {\r\n        console.log(\"setLike data:\", data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to update like:\", error);\r\n        throw error;\r\n      });\r\n  } else {\r\n    const likeNumber = cardElements.likes.length - 1;\r\n    deleteLike(cardId)\r\n      .then((data) => {\r\n        console.log(\"Profile updated:\", data);\r\n        likeBox.textContent = data.likes.length;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to update profile:\", error);\r\n      });\r\n  }\r\n}\r\n"],"names":["createCard","cardElements","deleteFunc","likeFunc","openImg","userId","card","document","querySelector","content","cloneNode","button","cardContainer","likesBox","likeButton","cardImage","cardDescription","src","link","alt","name","textContent","owner","_id","addEventListener","style","display","btn","likes","forEach","user","classList","add","checkLike","likeNumber","length","openModal","modal","handleEscClose","closeModal","remove","removeEventListener","event","key","getUserData","fetch","headers","authorization","then","res","ok","json","Promise","reject","concat","status","catch","error","console","objElements","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","clearValidation","profileForm","config","querySelectorAll","element","setCustomValidity","errorElement","nextElementSibling","popups","placesList","profile","profileInfo","avatarImg","nameContent","jobContent","profileEditBtn","profileAddBtn","popupCardImg","popupContImg","popupImg","popupImgCaption","popupProfile","nameInput","jobInput","profileBtn","popupAvatar","avatarForm","inputAvatar","avatarButton","popupNewCard","newCardForm","popupButton","placeInput","linkInput","openImgWindow","input","deleteCard","cardId","method","response","data","log","likeReaction","likeBox","toggle","id","contains","parseInt","Error","deleteLike","all","_ref","array","_ref2","userData","elements","append","isCloseButton","target","isOverlay","setupCloseEventListeners","reset","about","avatar","backgroundImage","createProfile","value","evt","preventDefault","job","body","JSON","stringify","updateProfile","place","postCard","newCard","prepend","formElement","inputElement","validity","patternMismatch","dataset","errorMessage","validationMessage","enableValidation","inputList","Array","from","buttonElement","inputElements","some","valid","toggleButtonState"],"sourceRoot":""}